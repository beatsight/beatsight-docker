x-restart-policy: &restart_policy
  restart: unless-stopped
x-depends_on-healthy: &depends_on-healthy
  condition: service_healthy
x-healthcheck-defaults: &healthcheck_defaults
  # Avoid setting the interval too small, as docker uses much more CPU than one would expect.
  # Related issues:
  # https://github.com/moby/moby/issues/39102
  # https://github.com/moby/moby/issues/39388
  interval: "$HEALTHCHECK_INTERVAL"
  timeout: "$HEALTHCHECK_TIMEOUT"
  retries: $HEALTHCHECK_RETRIES
  start_period: 10s
x-beatsight-defaults: &beatsight_defaults
  <<: *restart_policy
  image: ${BEATSIGHT_IMAGE}
  # Set the platform to build for linux/arm64 when needed on Apple silicon Macs.
  platform: ${DOCKER_PLATFORM:-}
  depends_on:
    redis:
      <<: *depends_on-healthy
    postgres:
      <<: *depends_on-healthy
    rabbitmq:
      <<: *depends_on-healthy
  command: ["beatsight"]
  environment:
    PYTHONPATH: "/home/beatsight/app/vendor/repostat"
    # Leaving the value empty to just pass whatever is set
    # on the host system (or in the .env file)
    COMPOSE_PROFILES:
  volumes:
    - "beatsight-data:/data"
    - "../runtime:/home/beatsight/runtime"
    - "../logs:/home/beatsight/logs"
    - "../license.json:/home/beatsight/app/core-serv/license.json"

services:
  web:
    <<: *beatsight_defaults
    container_name: beatsight-web
    ulimits:
      nofile:
        soft: 4096
        hard: 4096
    healthcheck:
      <<: *healthcheck_defaults
      test:
        - "CMD"
        - "/bin/bash"
        - "-c"
        # Courtesy of https://unix.stackexchange.com/a/234089/108960
        - 'exec 3<>/dev/tcp/127.0.0.1/9998 && echo -e "GET /api/core/_health/ HTTP/1.1\r\nhost: 127.0.0.1\r\n\r\n" >&3 && grep ok -s -m 1 <&3'
    networks:
      - beatsight-net
    ports:
      - "$BEATSIGHT_BIND:80/tcp"

  celery:
    <<: *beatsight_defaults
    container_name: beatsight-celery
    ulimits:
      nofile:
        soft: 4096
        hard: 4096
    entrypoint: /home/beatsight/build/start-celery.sh
    networks:
      - beatsight-net

  beat:
    <<: *beatsight_defaults
    container_name: beatsight-beat
    ulimits:
      nofile:
        soft: 4096
        hard: 4096
    entrypoint: /home/beatsight/build/start-beat.sh
    networks:
      - beatsight-net

  postgres:
    <<: *restart_policy
    container_name: beatsight-postgres
    # Using the same postgres version as Sentry dev for consistency purposes
    image: "reg.beatsight.com/beatsight/postgres:14.13"
    healthcheck:
      <<: *healthcheck_defaults
      # Using default user "postgres" from sentry/sentry.conf.example.py or value of POSTGRES_USER if provided
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
    command:
      [
        "postgres",
        "-c",
        "max_connections=${POSTGRES_MAX_CONNECTIONS:-100}",
      ]
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
    volumes:
      - "beatsight-postgres:/var/lib/postgresql/data"
    networks:
      - beatsight-net
      
  redis:
    <<: *restart_policy
    container_name: beatsight-redis
    image: "reg.beatsight.com/beatsight/redis:6.2.14-alpine"
    healthcheck:
      <<: *healthcheck_defaults
      test: redis-cli ping
    volumes:
      - "beatsight-redis:/data"
    ulimits:
      nofile:
        soft: 10032
        hard: 10032
    networks:
      - beatsight-net

  rabbitmq:
    container_name: beatsight-mq
    image: "reg.beatsight.com/beatsight/rabbitmq:3-management-alpine"
    healthcheck:
      <<: *healthcheck_defaults
      test: rabbitmq-diagnostics -q ping
    volumes:
        - beatsight-mq:/var/lib/rabbitmq
        - beatsight-mq-log:/var/log/rabbitmq
    networks:
      - beatsight-net
      

volumes:
  # These store application data that should persist across restarts.
  beatsight-data:
    external: true
  beatsight-postgres:
    external: true
  beatsight-redis:
    external: true
  beatsight-mq:
    external: true
  # These store ephemeral data that needn't persist across restarts.
  # That said, volumes will be persisted across restarts until they are deleted.
  beatsight-mq-log:

networks:
  beatsight-net:
    driver: bridge
